user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
    # multi_accept on;
}

http {

    ##
    # Basic Settings
    ##

    # this uses a kernel level primitive to copy data between file descriptors  
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # open file cache
    open_file_cache max=5000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    ##
    # Logging Settings
    ##

	# default:
	#log_format combined '$remote_addr - $remote_user [$time_local] '
	#                    '"$request" $status $body_bytes_sent '
	#                    '"$http_referer" "$http_user_agent"';
    # this just shows the cache status on top of everything else
	log_format log_fmt  '$remote_addr - $remote_user $upstream_cache_status [$time_local]  '
	                    '"$request" $status $body_bytes_sent '
	                    '"$http_referer" "$http_user_agent"';

    access_log /var/log/nginx/access.log log_fmt;
    error_log /var/log/nginx/error.log;
    rewrite_log on;

    ##
    # Gzip Settings
    ##

    gzip  on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;

    ##
    # Caching
    ##

    # the key_zone is the area where just metadata are stored; the key_zone name is referenced in the subsequent proxy_cache directives
    proxy_cache_path /var/cache/nginx keys_zone=mycache:64m max_size=1G;
    # this is the key used to index the cache
    proxy_cache_key "$scheme$proxy_host$uri$is_args$args $cookie__session_id";
    # the minimum number of times a request with the same key should be requested before caching
    #proxy_cache_min_uses 1;
    proxy_cache_methods GET HEAD;

    # set how long to keep resources in the cache
    #proxy_cache_valid any 1m;
    proxy_cache_valid 200 302 1m;
    #proxy_cache_valid 404      1m;

    # if any variable is non empty, the result is not stored in the cache
    # if any cookie is set, the result will not be cached
    proxy_no_cache     $http_set_cookie $http_x_update $http_pragma $http_authorization;
    # if any variable is non empty, the request will bypass the cache
    # if any cookie is sent, the request will bypass the cache
    proxy_cache_bypass $http_cookie $http_x_update;


    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}

