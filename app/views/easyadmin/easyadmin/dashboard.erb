<%= render partial: "/easyadmin/easyadmin/left_bar", locals: { page: "dashboard" } %>
 
  <div id="content">    
    
    <div id="content-header">
      <h1></h1>
    </div> <!-- #content-header --> 


    <div id="content-container">

    <h3>Registrazioni</h3>
    <hr/>

    <div class="row">

      <div class="col-md-9">
        <div class="portlet">
          <div class="portlet-header">
            <h3>
              <i class="fa fa-bar-chart-o"></i>
              UTENTI REGISTRATI
            </h3>
          </div> <!-- /.portlet-header -->
          <div class="portlet-content">
            <div id="line-chart" class="chart-holder"></div>              
          </div> <!-- /.portlet-content -->
        </div> <!-- /.portlet -->         
      </div> <!-- /.col -->

      <div class="col-md-3">
        <div class="portlet">
          <div class="portlet-header">
            <h3>
              <i class="fa fa-bar-chart-o"></i>
              TIPO DI REGISTRAZIONE
            </h3>
          </div> <!-- /.portlet-header -->
          <div class="portlet-content">
            <div id="fb-reg-donut-chart" class="chart-holder"></div>             
          </div> <!-- /.portlet-content -->
        </div> <!-- /.portlet -->
      </div> <!-- /.col -->

    </div> <!-- /.row -->

  </div>
</div>

<script src="/canvas-admin/js/libs/raphael-2.1.2.min.js"></script>
<script src="/canvas-admin/js/plugins/morris/morris.min.js"></script>

<script type="text/javascript">
  
  user_counter = <%= User.count %>;
  $(document).ready(function() {
    buildDonut();
    buildLine();
  });

  function buildDonut() {
    $('#fb-reg-donut-chart').empty();
    user_without_provider = <%= User.includes(:authentications).where("authentications.user_id IS NULL").count %>;
    if(user_counter > 0) {
      Morris.Donut({
            element: 'fb-reg-donut-chart',
            data: [
                { label: 'Registrazioni semplici', value: ((user_without_provider * 100)/user_counter) },
                { label: 'Registrazioni con provider', value: (((user_counter - user_without_provider) * 100)/user_counter) }
            ],
            hideHover: true,
            colors: ["#f18c09", "#0b62a4"],
            formatter: function (y) { return y + "%" }
      });
    }
  }

  function buildLine() {
    if(user_counter > 0) {

      first_user_created_at = "<%= (User.order("created_at ASC").limit(1).first.created_at).strftime("%Y-%m-%d") if User.any? %>";

      var data_arr = [];

      data_arr.push({ time: first_user_created_at, tot: 0, provider: 0, simple: 0 });

      user_arr = <%= raw(@user_week_list.to_json) %>;
      $.each(user_arr, function(key, value) {
        data_arr.push({
          time: key,
          tot: value.tot,
          provider: (value.tot - value.simple),
          simple: value.simple
        });
      });
   
      current_time = "<%= Time.now.to_date.strftime("%Y-%m-%d") %>"; 
      current_time_user = <%= User.where("created_at<=?", Time.now).count %>;
      current_time_user_simple = <%= User.includes(:authentications).where("authentications.user_id IS NULL AND users.created_at<=?", Time.now).count %>;
      data_arr.push({        
          time: current_time,
          tot: current_time_user,
          provider: (current_time_user - current_time_user_simple),
          simple: current_time_user_simple
      });
          
      Morris.Line({
        element: 'line-chart',
        data: data_arr,
        xLabelFormat: function (x) { return (x.getMonth() + 1) + "/" + x.getFullYear(); },
        xkey: 'time',
        ykeys: ['tot', 'provider', 'simple'],
        labels: ['Registrati totali', 'Registrati provider', 'Registrati semplici'],
        lineColors: ["black", "#0b62a4", "#f18c09"]
      });

    }
  } 

</script>