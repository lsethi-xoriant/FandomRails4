<div class="panel panel-default">
  <% if f.object.id %>
    <div class="panel-heading-dark">UPLOAD</div>
  <% else %>
    <div class="panel-heading-dark">UPLOAD 
      <p style="float: right"><%= link_to_remove_fields("rimuovi", "upload") %></p>
    </div>
  <% end %>
    <div class="panel-body">
      <%= f.hidden_field :resource_type, :class => "form-control" %>

      <%= f.fields_for :resource do |uploadform| %>
      <div class="row">
        <div class="col-lg-6">
          <div class="form-group">
            <label class="text-input">Seleziona il metodo di upload</label>
            <div class="radio">
              <%= f.radio_button :gallery_type, "flowplayer", :class => "flowplayer", :checked => (get_upload_type(f.object.id) == "flowplayer" || get_upload_type(f.object.id) == nil), :onchange => "updateInputsForGalleryType($(this))" %> Upload + Flowplayer
            </div>
            <div class="radio">
              <%= f.radio_button :gallery_type, "instagram", :class => "instagram", :checked => (get_upload_type(f.object.id) == "instagram"), :onchange => "updateInputsForGalleryType($(this))" %> Instagram
            </div>
            <div class="radio">
              <%= f.radio_button :gallery_type, "twitter", :class => "twitter", :checked => (get_upload_type(f.object.id) == "twitter"), :onchange => "updateInputsForGalleryType($(this))" %> Twitter
            </div>
            <div class="radio">
              <%= f.radio_button :gallery_type, "youtube", :class => "youtube", :checked => (get_upload_type(f.object.id) == "youtube"), :onchange => "updateInputsForGalleryType($(this))" %> YouTube
            </div>
          </div>
        </div>
      </div>
      <div class="row video-gallery gallery-form <%= f.object.id %> <%= (get_upload_type(f.object.id).in? ['flowplayer', 'youtube']) ? '' : 'hidden' %>" style="margin-bottom: 0px;">
        <div class="col-lg-6">
          <div class="form-group">
            <label class="text-input">Visibile</label>
             <%= f.select(:when_show_interaction, adjust_when_show_interactions_for_form(), {}, { :class => "form-control" }) %>
          </div>
          <div class="form-group">
            <label class="text-input">Posizione</label>
             <%= f.select(:interaction_positioning, [["UNDER_MEDIA", "UNDER_MEDIA"], ["OVER_MEDIA", "OVER_MEDIA"]], {}, { :class => "form-control" }) %>
          </div>
          <div class="form-group">
            <label class="text-input">Testo privacy</label>
            <%= uploadform.text_area :privacy_description, :class => "form-control", rows: 6 %>
          </div>
          <div class="form-group">
            <label class="text-input">Testo richiesta liberatoria</label>
            <%= uploadform.text_area :releasing_description, :class => "form-control", rows: 6 %>
          </div>
          <div class="form-group">
            <label class="text-input">Richiesto per il completamento</label>
            <%= f.select(:required_to_complete, [["SI", true], ["NO", false]], {}, { :class => "form-control" }) %>
          </div>
        </div>
        <div class="col-lg-6">
          <div class="form-group">
            <label class="text-input">Secondo di apparizione</label>
              <%= f.text_field :seconds, :class => "form-control" %>
          </div>
        </div>
        <div class="col-lg-6">
          <div class="form-group">
            <label class="text-input">Call to action template</label>
            <%= uploadform.select(:call_to_action_id, get_cta_template_option_list(), {}, { :class => "form-control" }) %>
          </div>
          <div class="form-group">
            <label class="text-input">Numero di upload consentiti</label>
            <%= uploadform.text_field :upload_number, :class => "form-control" %>
          </div>
          <div class="form-group">
            <label class="text-input">Titolo necessario</label>
            <%= uploadform.check_box :title_needed, { checked: true } %>
          </div>
          <div class="form-group">
            <label class="text-input">Privacy necessaria</label>
            <%= uploadform.check_box :privacy %>
          </div>
          <div class="form-group">
            <label class="text-input">Liberatoria necessaria</label>
            <%= uploadform.check_box :releasing %>
          </div>
          <div class="form-group">
            <label class="text-input">Immagine watermark</label>
            <div class="fileupload fileupload-new" data-provides="fileupload">
              <div class="fileupload-preview thumbnail" style="width: 200px; height: 112px; line-height: 20px;">
              <% if uploadform.object.watermark.exists? %>
                <img src="<%= uploadform.object.watermark.url %>">
              <% end %>
              </div>
              <div>
                <span class="btn btn-default btn-file"><span class="fileupload-new">SELEZIONA L'IMMAGINE</span>
                  <span class="fileupload-exists">Change</span><%= uploadform.file_field :watermark  %></span>
                <a href="#" class="btn btn-default fileupload-exists" data-dismiss="fileupload">Remove</a>
              </div>
            </div>
          </div>
          <div class="form-group">
            <label class="text-input">Campi aggiuntivi</label>
          </div>
          <div class="form-group">
            <%# = f.text_area :aux, :cols => "60", :rows => "5" %>
          </div>
        </div>
      </div>
      <div class="row instagram-gallery gallery-form <%= f.object.id %> <%= get_upload_type(f.object.id) == 'instagram' ? '' : 'hidden' %>" style="margin-bottom: 0px;">
        <div class="col-lg-12">
          <% if f.object.id %>
            <% instagram_tag = Interaction.find(f.object.id).aux["configuration"]["instagram_tag"] rescue {} %>
            <div class="form-group col-lg-2">
              <div class="form-group">
                <%= f.check_box :registered_users_only, { checked: (instagram_tag["registered_users_only"] rescue true) } %>
                <label class="text-input">Solo utenti registrati</label>
              </div>
            </div>
            <div class="form-group col-lg-4">
              <label class="text-input">Tag della gallery (senza #)</label>
              <br/> Dopo la registrazione / modifica, attendere la spunta verde sotto al tag registrato prima di salvare la call to action.

              <% instagram_tag_name = instagram_tag["name"] rescue "" %>
              <% tag_subscription_id = instagram_tag["subscription_id"] rescue "" %>

              <%= f.text_field :instagram_tag_name, :class => "form-control instagram-tag", :value => instagram_tag_name %>
              <%= f.hidden_field :instagram_tag_subscription_id, :class => "subscription-id", :value => tag_subscription_id %>
              <a class="btn btn-primary btn-block clickable" onclick="sendInstagramTagSubscription(<%= f.object.id %>, $(this));"> Registra / aggiorna tag </a>

              <p>
                <% if get_upload_type(f.object.id) == "instagram" %>
                  Tag registrato: <%= instagram_tag_name %> - ID registrazione: <%= tag_subscription_id %> 
                <% end %>
              </p>
              <img class="subscription-status-image" style="display:none;" src="/assets/loading.gif" width="32px" height="32px">
            </div>
            <div class="form-group col-lg-4">
              <label class="text-input">Call to action template</label>
              <%= uploadform.select(:call_to_action_id, get_cta_template_option_list(), {}, { :class => "form-control" }) %>
            </div>
          <% else %>
            <div class="col-lg-6">
              <p> Per settare il tag Instagram da sottoscrivere, salvare prima la call to action. </p>
            </div>
          <% end %>
        </div>
      </div>
      <div class="row twitter-gallery gallery-form <%= f.object.id %> <%= get_upload_type(f.object.id) == 'twitter' ? '' : 'hidden' %>" style="margin-bottom: 0px;">
        <div class="col-lg-12">
          <% twitter_tag = Interaction.find(f.object.id).aux["configuration"]["twitter_tag"] rescue {} %>
          <div class="form-group col-lg-2">
            <div class="form-group">
              <%= f.check_box :registered_users_only, { checked: (twitter_tag["registered_users_only"] rescue true) } %>
              <label class="text-input">Solo utenti registrati</label>
            </div>
          </div>
          <div class="form-group col-lg-4">
            <label class="text-input">Tag della gallery (senza #)</label>
            <% twitter_tag_name = twitter_tag["name"] rescue "" %>
            <%= f.text_field :twitter_tag_name, :class => "form-control twitter-tag", :value => twitter_tag_name %>
          </div>
          <div class="form-group col-lg-4">
            <label class="text-input">Call to action template</label>
            <%= uploadform.select(:call_to_action_id, get_cta_template_option_list(), {}, { :class => "form-control" }) %>
          </div>
        </div>
      </div>
    <% end %>
  </div>
</div>

<script type="text/javascript">

  $(document).ready(function() {
    elementClass = "<%= get_upload_type(f.object.id) %>";
    if(elementClass == "")
      elementClass = "flowplayer";
    updateInputsForGalleryType($("." + elementClass + " <%= f.object.id %>"));
  });

  function updateInputsForGalleryType(el) {
    parentDiv = el.parent().parent().parent().parent();
    switch(el.attr("class")) {
      case "flowplayer":
      case "youtube":
        parentDiv.siblings(".gallery-form").addClass("hidden");
        parentDiv.siblings(".video-gallery").removeClass("hidden");
        break;
      case "instagram":
        parentDiv.siblings(".gallery-form").addClass("hidden");
        parentDiv.siblings(".instagram-gallery").removeClass("hidden");
        parentDiv.siblings(".video-gallery").children().children("input").val("");
        break;
      case "twitter":
        parentDiv.siblings(".gallery-form").addClass("hidden");
        parentDiv.siblings(".twitter-gallery").removeClass("hidden");
        parentDiv.siblings(".video-gallery").children().children("input").val("");
        break;
    }
  };

  $(".instagram-tag").on("keyup", function() {
    button = $(this).siblings("a");
    img = $(this).siblings("img")[0];
    p = $(this).siblings("p")[0];
    $(p).text("");
    img.style.display = "none";
    img.src = "/assets/loading.gif";
    button.addClass("clickable");
  });

  function sendInstagramTagSubscription(interactionId, button) {
    if(button.hasClass("clickable")) {
      button.removeClass("clickable");
      tagName = button.siblings("input").val();
      img = button.siblings("img")[0];
      img.style.display = "inline";
      changeTagSubscriptionRequest(interactionId, tagName, img);
    }
  };

  function changeTagSubscriptionRequest(interactionId, tagName, img) {
    $.ajax({
      type: "POST", 
      dataType: "json", 
      url: "/modify_instagram_upload_object/" + interactionId + "/" + tagName, 
      success: function(subscriptionId) {
        img.src = "/assets/icon-success.png";
        $(img).siblings("p").text("Tag registrato: " + tagName + " - ID registrazione: " + subscriptionId);
        $(img).siblings(".subscription-id").val(subscriptionId);
      },
      error: function(data) {
        img.src = "/assets/icon-error.png";
        $(img).siblings("p").text($.parseJSON(data.responseText).errors);
        $(img).siblings(".subscription-id").val("");
      }
    });
  };

</script>